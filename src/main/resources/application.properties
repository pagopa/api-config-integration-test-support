# Info
info.application.artifactId=@project.artifactId@
info.application.version=@project.version@
info.application.description=@project.description@
info.properties.environment=${ENV:azure}
# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoints.jmx.exposure.include=health,info
management.info.env.enabled=true
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
# Openapi
springdoc.writer-with-order-by-keys=true
springdoc.writer-with-default-pretty-printer=true
# Server
server.servlet.context-path=/
server.port=8080
# Logging
logging.level.root=${DEFAULT_LOGGING_LEVEL:INFO}
logging.level.it.gov.pagopa=${APP_LOGGING_LEVEL:INFO}
# CORS configuration
cors.configuration=${CORS_CONFIGURATION:'{"origins": ["*"], "methods": ["*"]}'}

#DB
spring.datasource.url=${DB_CONFIG_URL:jdbc:postgresql://pagopa-d-weu-nodo-flexible-postgresql.postgres.database.azure.com:6432/nodo?sslmode=require&prepareThreshold=0&currentSchema=cfg}
spring.datasource.username=${DB_CONFIG_USER:cfg}
spring.datasource.password=${DB_CONFIG_PASSWORD:password}
spring.datasource.driver-class-name=${DB_CONFIG_DRIVER:org.postgresql.Driver}
spring.datasource.hikari.maxLifetime=30000
spring.datasource.hikari.keepaliveTime=30000
spring.datasource.hikari.connection-test-query=${HEALTHCHECK_QUERY:select 1}

#SQL Security
dangerous.sql.keywords=DROP,TRUNCATE,GRANT,REVOKE,ALTER,EXECUTE,TRIGGER,ROLLBACK